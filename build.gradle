plugins {
    id "java"
    id "xyz.jpenilla.run-paper" version "2.3.0"
}

group = "tw.asts.mc"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven {
        name "papermc-repo"
        url "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name "sonatype"
        url "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url "https://repo.opencollab.dev/main/"
    }
    maven {
        url "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT"
    compileOnly "org.geysermc.geyser:api:2.4.0-SNAPSHOT"
    compileOnly "org.geysermc.floodgate:api:2.2.2-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.6"
    compileOnly files('libs/Residence.jar')
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.8")
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching('plugin.yml') {
        expand props
    }
}
